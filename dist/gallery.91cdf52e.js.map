{"version":3,"sources":["scripts/gallery.js"],"names":["document","addEventListener","gallery","getElementById","prevBtn","nextBtn","searchBar","cakeCount","cakesPerPage","large","medium","small","currentPage","searchQuery","getCakesPerPage","window","innerWidth","allCakes","i","cake","id","name","concat","imgSrc","push","generateAllCakes","renderCakes","filteredCakes","filter","toLowerCase","includes","start","end","innerHTML","length","galleryItem","createElement","classList","add","img","src","alt","caption","textContent","appendChild","disabled","e","target","value"],"mappings":";AAAAA,SAASC,iBAAiB,mBAAoB,WAC1C,IAAMC,EAAUF,SAASG,eAAe,gBAClCC,EAAUJ,SAASG,eAAe,YAClCE,EAAUL,SAASG,eAAe,YAClCG,EAAYN,SAASG,eAAe,cACpCI,EAAY,GACZC,EAAe,CAAEC,MAAO,GAAIC,OAAQ,EAAGC,MAAO,GAChDC,EAAc,EACdC,EAAc,GAGlB,SAASC,IACL,OAAIC,OAAOC,YAAc,IAAYR,EAAaG,MAC9CI,OAAOC,YAAc,IAAYR,EAAaE,OAC3CF,EAAaC,MAiBxB,IAAMQ,EAbN,WAEI,IADA,IAAMA,EAAW,GACRC,EAAI,EAAGA,GAAKX,EAAWW,IAAK,CACjC,IAAMC,EAAO,CACTC,GAAIF,EACJG,KAAIC,gBAAAA,OAAkBJ,GACtBK,OAAQ,uCAEZN,EAASO,KAAKL,GAElB,OAAOF,EAGMQ,GAGjB,SAASC,IACL,IAAMlB,EAAeM,IACfa,EAAgBV,EAASW,OAAO,SAAAT,GAAI,OAAIA,EAAKE,KAAKQ,cAAcC,SAASjB,EAAYgB,iBACrFE,GAASnB,EAAc,GAAKJ,EAC5BwB,EAAMD,EAAQvB,EACpBN,EAAQ+B,UAAY,GAEpB,IAAK,IAAIf,EAAIa,EAAOb,EAAIc,GAAOd,EAAIS,EAAcO,OAAQhB,IAAK,CAC1D,IAAMiB,EAAcnC,SAASoC,cAAc,OAC3CD,EAAYE,UAAUC,IAAI,gBAE1B,IAAMC,EAAMvC,SAASoC,cAAc,OACnCG,EAAIC,IAAMb,EAAcT,GAAGK,OAC3BgB,EAAIE,IAAMd,EAAcT,GAAGG,KAE3B,IAAMqB,EAAU1C,SAASoC,cAAc,KACvCM,EAAQC,YAAchB,EAAcT,GAAGG,KAEvCc,EAAYS,YAAYL,GACxBJ,EAAYS,YAAYF,GACxBxC,EAAQ0C,YAAYT,GAGxB/B,EAAQyC,SAA2B,IAAhBjC,EACnBP,EAAQwC,SAAWjC,EAAcJ,GAAgBmB,EAAcO,OAInE9B,EAAQH,iBAAiB,QAAS,WAC1BW,EAAc,IACdA,IACAc,OAIRrB,EAAQJ,iBAAiB,QAAS,WAC9B,IAAMO,EAAeM,IACjBF,EAAcJ,EAAeS,EAASW,OAAO,SAAAT,GAAI,OAAIA,EAAKE,KAAKQ,cAAcC,SAASjB,EAAYgB,iBAAgBK,SAClHtB,IACAc,OAKRpB,EAAUL,iBAAiB,QAAS,SAAC6C,GACjCjC,EAAciC,EAAEC,OAAOC,MACvBpC,EAAc,EACdc,MAIJA,IAGAX,OAAOd,iBAAiB,SAAUyB","file":"gallery.91cdf52e.js","sourceRoot":"../src","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const gallery = document.getElementById('cake-gallery');\n    const prevBtn = document.getElementById('prev-btn');\n    const nextBtn = document.getElementById('next-btn');\n    const searchBar = document.getElementById('search-bar');\n    const cakeCount = 50;\n    const cakesPerPage = { large: 10, medium: 8, small: 5 };\n    let currentPage = 1;\n    let searchQuery = '';\n\n    // Function to get the number of cakes per page based on screen size\n    function getCakesPerPage() {\n        if (window.innerWidth <= 600) return cakesPerPage.small;\n        if (window.innerWidth <= 900) return cakesPerPage.medium;\n        return cakesPerPage.large;\n    }\n\n    // Function to generate all cakes\n    function generateAllCakes() {\n        const allCakes = [];\n        for (let i = 1; i <= cakeCount; i++) {\n            const cake = {\n                id: i,\n                name: `PokÃ©mon Cake ${i}`,\n                imgSrc: 'https://via.placeholder.com/200x200'\n            };\n            allCakes.push(cake);\n        }\n        return allCakes;\n    }\n\n    const allCakes = generateAllCakes();\n\n    // Function to render cakes\n    function renderCakes() {\n        const cakesPerPage = getCakesPerPage();\n        const filteredCakes = allCakes.filter(cake => cake.name.toLowerCase().includes(searchQuery.toLowerCase()));\n        const start = (currentPage - 1) * cakesPerPage;\n        const end = start + cakesPerPage;\n        gallery.innerHTML = '';\n\n        for (let i = start; i < end && i < filteredCakes.length; i++) {\n            const galleryItem = document.createElement('div');\n            galleryItem.classList.add('gallery-item');\n            \n            const img = document.createElement('img');\n            img.src = filteredCakes[i].imgSrc;\n            img.alt = filteredCakes[i].name;\n            \n            const caption = document.createElement('p');\n            caption.textContent = filteredCakes[i].name;\n            \n            galleryItem.appendChild(img);\n            galleryItem.appendChild(caption);\n            gallery.appendChild(galleryItem);\n        }\n\n        prevBtn.disabled = currentPage === 1;\n        nextBtn.disabled = currentPage * cakesPerPage >= filteredCakes.length;\n    }\n\n    // Event listeners for buttons\n    prevBtn.addEventListener('click', () => {\n        if (currentPage > 1) {\n            currentPage--;\n            renderCakes();\n        }\n    });\n\n    nextBtn.addEventListener('click', () => {\n        const cakesPerPage = getCakesPerPage();\n        if (currentPage * cakesPerPage < allCakes.filter(cake => cake.name.toLowerCase().includes(searchQuery.toLowerCase())).length) {\n            currentPage++;\n            renderCakes();\n        }\n    });\n\n    // Event listener for search bar\n    searchBar.addEventListener('input', (e) => {\n        searchQuery = e.target.value;\n        currentPage = 1; // Reset to first page on new search\n        renderCakes();\n    });\n\n    // Initial render\n    renderCakes();\n\n    // Re-render on window resize to adjust number of cakes per page\n    window.addEventListener('resize', renderCakes);\n});"]}