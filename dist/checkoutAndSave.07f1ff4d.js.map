{"version":3,"sources":["scripts/checkoutAndSave.js"],"names":["document","addEventListener","purchaseButton","getElementById","confirmPurchaseButton","checkoutSection","checkoutForm","loggedInUser","JSON","parse","localStorage","getItem","value","firstName","lastName","email","address","creditCard","cardNumber","expiryDate","cvv","style","display","alert","querySelector","event","preventDefault","currentCake","base","primaryFrosting","secondaryFrosting","font","message","pokeball","stamps","Array","from","querySelectorAll","map","cb","setItem","stringify","savedCakes","push"],"mappings":";AAAAA,SAASC,iBAAiB,mBAAoB,WAC1C,IAAMC,EAAiBF,SAASG,eAAe,mBACzCC,EAAwBJ,SAASG,eAAe,2BAChDE,EAAkBL,SAASG,eAAe,oBAC1CG,EAAeN,SAASG,eAAe,iBACvCI,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,iBAErDT,EAAeD,iBAAiB,QAAS,WACjCM,IAEAD,EAAa,cAAcM,MAAQL,EAAaM,UAChDP,EAAa,aAAaM,MAAQL,EAAaO,SAC/CR,EAAoB,MAAEM,MAAQL,EAAaQ,MAC3CT,EAAsB,QAAEM,MAAQL,EAAaS,QAC7CV,EAAa,eAAeM,MAAQL,EAAaU,WAAWC,WAC5DZ,EAAa,eAAeM,MAAQL,EAAaU,WAAWE,WAC5Db,EAAkB,IAAEM,MAAQL,EAAaU,WAAWG,KAExDf,EAAgBgB,MAAMC,QAAU,UAGpClB,EAAsBH,iBAAiB,QAAS,WAE7BK,EAAa,cAAcM,MAC5BN,EAAa,aAAaM,MAC7BN,EAAoB,MAAEM,MACpBN,EAAsB,QAAEM,MAEjBN,EAAa,eAAeM,MAC5BN,EAAa,eAAeM,MACnCN,EAAkB,IAAEM,MAEvBJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAI1CY,MAAM,+DACNlB,EAAgBgB,MAAMC,QAAU,SAGjBtB,SAASwB,cAAc,yBAC/BvB,iBAAiB,QAAS,SAACwB,GAClCA,EAAMC,iBACN,IAAMC,EAAc,CAChBC,KAAM5B,SAASG,eAAe,aAAaS,MAC3CiB,gBAAiB7B,SAASG,eAAe,oBAAoBS,MAC7DkB,kBAAmB9B,SAASG,eAAe,sBAAsBS,MACjEmB,KAAM/B,SAASG,eAAe,QAAQS,MACtCoB,QAAShC,SAASG,eAAe,iBAAiBS,OAASZ,SAASG,eAAe,gBAAgBS,MACnGqB,SAAUjC,SAASG,eAAe,YAAYS,MAC9CsB,OAAQC,MAAMC,KAAKpC,SAASqC,iBAAiB,kDAAkDC,IAAI,SAAAC,GAAE,OAAIA,EAAG3B,SAGhHF,aAAa8B,QAAQ,cAAehC,KAAKiC,UAAUd,IAE/CpB,GACAA,EAAamC,WAAWC,KAAKhB,GAC7BjB,aAAa8B,QAAQ,eAAgBhC,KAAKiC,UAAUlC,IACpDG,aAAa8B,QAAQ,QAAUjC,EAAaQ,MAAOP,KAAKiC,UAAUlC,IAClEgB,MAAM,uCAENA,MAAM","file":"checkoutAndSave.07f1ff4d.js","sourceRoot":"../src","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const purchaseButton = document.getElementById('purchase-button');\n    const confirmPurchaseButton = document.getElementById('confirm-purchase-button');\n    const checkoutSection = document.getElementById('checkout-section');\n    const checkoutForm = document.getElementById('checkout-form');\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n\n    purchaseButton.addEventListener('click', () => {\n        if (loggedInUser) {\n            // Pre-fill checkout form with user data\n            checkoutForm['first-name'].value = loggedInUser.firstName;\n            checkoutForm['last-name'].value = loggedInUser.lastName;\n            checkoutForm['email'].value = loggedInUser.email;\n            checkoutForm['address'].value = loggedInUser.address;\n            checkoutForm['card-number'].value = loggedInUser.creditCard.cardNumber;\n            checkoutForm['expiry-date'].value = loggedInUser.creditCard.expiryDate;\n            checkoutForm['cvv'].value = loggedInUser.creditCard.cvv;\n        }\n        checkoutSection.style.display = 'block';\n    });\n\n    confirmPurchaseButton.addEventListener('click', () => {\n        const order = {\n            firstName: checkoutForm['first-name'].value,\n            lastName: checkoutForm['last-name'].value,\n            email: checkoutForm['email'].value,\n            address: checkoutForm['address'].value,\n            creditCard: {\n                cardNumber: checkoutForm['card-number'].value,\n                expiryDate: checkoutForm['expiry-date'].value,\n                cvv: checkoutForm['cvv'].value\n            },\n            cake: JSON.parse(localStorage.getItem('currentCake'))\n        };\n\n        // Save order to localStorage or send to the server here\n        alert('Purchase complete! Your cake is being prepared and shipped.');\n        checkoutSection.style.display = 'none';\n    });\n\n    const saveButton = document.querySelector('button[type=\"submit\"]');\n    saveButton.addEventListener('click', (event) => {\n        event.preventDefault();\n        const currentCake = {\n            base: document.getElementById('cake-base').value,\n            primaryFrosting: document.getElementById('primary-frosting').value,\n            secondaryFrosting: document.getElementById('secondary-frosting').value,\n            font: document.getElementById('font').value,\n            message: document.getElementById('message-short').value || document.getElementById('message-long').value,\n            pokeball: document.getElementById('pokeball').value,\n            stamps: Array.from(document.querySelectorAll('#pokemon-stamp input[type=\"checkbox\"]:checked')).map(cb => cb.value)\n        };\n\n        localStorage.setItem('currentCake', JSON.stringify(currentCake));\n\n        if (loggedInUser) {\n            loggedInUser.savedCakes.push(currentCake);\n            localStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\n            localStorage.setItem('user_' + loggedInUser.email, JSON.stringify(loggedInUser));\n            alert('Custom cake saved to your account!');\n        } else {\n            alert('Please log in to save your custom cake.');\n        }\n    });\n});\n"]}